Node.prototype.ownerdocument;//返回节点所在的顶层文档对象
var b =p.ownerdocument;
b===document;


Node.prototype.nextSibling;//返回同级节点
var A=document.getElementById("d1");
var b=document.getElementById("d2");
d1.nextSibling===d2;

var el=documnet.getelementbyID("d1").firstchild;
while(el!==null){
    el=el.nextSibling;
}

Node.prototype.previousSibling;
Node.prototype.previousSibling;


Node.prototype.parentNode;//三种type  element document documentfragment
Node.prototype.parentElement;

Node.prototype.firstchild;//  element text comment
Node.prototype.lastchild;
Node.prototype.childNodes;//return nodelist
var di=document.getelementbyID("div1");
var children =div.childNodes;

for(var i=0;i<children.length; i++){

}



Node.prototype.isConnected();
var test=document.createElement('a');
test.isConnected;//false
//仅生成却未插入
document.body.appendChild(test);
test.isConnected;//true

//方法
Node.prototype.appendChild();
Node.prototype.hasChildNodes();
function Domcomb(parent,callback){
    if(parent.hasChildNodes()){
        for(var node=parent.firstChild;node; node=node.nextSibling){
            Domcomb(node,callback);
        
        }
    }
    callback(parent);
}
Domcomb(document.body,console.log);


Node.prototype.cloneNode();
var cloneUL=document.querySelector("ul").cloneNode(true);
//1.append   2.id   3.name  change

Node.prototype.insertBefore(newcnode,referencenode);
//add before referencenode  2.insert old node ,will delete old node in nodelist
Node.prototype.removeChild();
Node.prototype.replaceChild();
Node.prototype.contains();


var links=document.links;
for(var i=0;i<links.length;i++){
    console.log(links[i]);
}


//listener
function hello(){
    console.log("hello world");
}

var button=document.getElementById('btn');
button.addEventListener("click",hello,false);

function print(x){
    console.log(x);
}
var el=document.getElementById("div1");
el.addEventListener('click',function(){
    print("hello");
},false);

var para=document.getElementById('para');
para.addEventListener('click',function(e){
    console.log(this.nodeName);
},false);

div.addEventListener("click",listener,false);
div.removeEventListener('click',listener,false);
div.addEventListener('click',function(e){},false);
div.removeEventListener('click',function(e){},false);//can not run
div.addEventListener('click',listener,true);
div.removeEventListener('click',listener,false);

para.addEventListener("click",hello,false);
var event=new Event('click');
para.dispatchEvent(event);

var canceled=! cb.dispatchevent(event);
if(canceled){
    console.log('事件取消');}
    else{console.log('事件未取消')}


el.setAttribute("onclick","dosomenthing()");

var btn=document.getelementbyID('btn');


//1
btn.onclick=function(){
console.log(this.id);
};

//2
btn.addeventlistener(
    'click',
    function(e){
        console.log(this.id);
    },
    false);

p.addEventListener('click',function(e){
    e.stoppropagation();
},true);

p.addEventListener('click',function(e){
    event.stoppropagation();
},false);


p.addEventListener("click",function(e){
e.stoppropagation();
console.log(1);
});
p.addEventListener('click',function(e){
    cosole.log(2);
});


p.addeventlistener('click',function(e){
    event.stopImmediatePropagation();
    console.log(1);
});

p.addEventListener("click",function(e){
    console.log(2);
});
